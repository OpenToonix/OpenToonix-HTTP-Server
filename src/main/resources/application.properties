# --- AVATAR CONFIGURATION ---
avatar.storage-folder-path = ${AVATAR_STORAGE_FOLDER_PATH}

# --- DATABASE CONFIGURATION ---
spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
spring.datasource.hikari.connection-init-sql = SET NAMES utf8 COLLATE utf8_unicode_ci
spring.datasource.password = ${DATABASE_PASSWORD}
spring.datasource.url = jdbc:mysql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}?useSSL=true&serverTimezone=UTC&allowPublicKeyRetrieval=true&allowLoadLocalInfile=true
spring.datasource.username = ${DATABASE_USERNAME}
spring.jpa.database-platform = org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.naming.physical-strategy = org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.open-in-view = true

# --- DATABASE MIGRATION CONFIGURATION ---
spring.flyway.baseline-on-migrate = true
spring.flyway.baseline-version = 0
spring.flyway.enabled = true
spring.flyway.locations = classpath:db/migrations
spring.flyway.placeholders.csv_folder_path = ./src/main/resources/db/csv

# --- EMAIL CONFIGURATION ---
mail.from-account-related-email-address = ${MAIL_SERVER_FROM_ACCOUNT_RELATED_EMAIL_ADDRESS}
mail.new-account-email-verification-message.message = Hi {username}. Welcome to ${issuer.name}!\n\n\
  To verify your account, click the following link:\n\n\
  {user_account_verification_link}\n\n\
  This link will expire in {hours_to_expire} hours.\n\n\
  If you didn't create an account, you should get in touch with us immediately at ${issuer.support-email-address}.
mail.new-account-email-verification-message.subject = Verify Your ${issuer.name} Account
spring.mail.host = ${MAIL_SERVER_HOST:smtp.gmail.com}
spring.mail.password = ${MAIL_SERVER_PASSWORD}
spring.mail.port = ${MAIL_SERVER_PORT:587}
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.starttls.enable = true
spring.mail.username = ${MAIL_SERVER_USERNAME}

# --- ISSUER CONFIGURATION ---
issuer.account-related.name = ${ISSUER_ACCOUNT_RELATED_NAME:${ISSUER_NAME}}
issuer.name = ${ISSUER_NAME}
issuer.support-email-address = ${ISSUER_SUPPORT_ADDRESS}

# --- JWT CONFIGURATION ---
jwt.secret = ${JWT_SECRET}

# --- LOGGING CONFIGURATION ---
#logging.level.org.springframework.transaction=DEBUG
#logging.level.org.springframework.orm.jpa=DEBUG
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# --- OPENAPI CONFIGURATION ---
springdoc.api-docs.path = /api-docs
springdoc.swagger-ui.path = /docs

# --- SERVER CONFIGURATION ---
server.cors.allowed-origins = ${CORS_ALLOWED_ORIGINS:http://localhost:80}
server.port = ${PORT:8080}
server.public-address = ${PUBLIC_ADDRESS:http://localhost:8080}
server.servlet.context-path = /api
spring.application.description = @project.description@
spring.application.name = @project.name@
spring.application.version = @project.version@

# --- VERIFICATION TOKENS CONFIGURATION ---
verification-tokens.salt-key = ${VERIFICATION_TOKENS_SALT_KEY}
verification-tokens.security-key = ${VERIFICATION_TOKENS_SECURITY_KEY}
